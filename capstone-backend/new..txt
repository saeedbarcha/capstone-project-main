const express = require('express')
const morgan = require('morgan')
const cors = require('cors')
const Parse = require('parse/node')
const {PARSE_APP_ID, PARSE_JAVASCRIPT_KEY} = require('./config')

const app = express()
const port = process.env.PORT || 3001

app.use(express.json())
app.use(morgan("tiny"))
app.use(cors())

Parse.initialize(PARSE_APP_ID, PARSE_JAVASCRIPT_KEY)
Parse.serverURL = "https://parseapi.back4app.com"

app.post('/register', async (req, res) => {
  let user = new Parse.User(req.body)
  console.log('user: ', user);
  console.log('req.body: ', req.body);

  try {
      await user.signUp()
      res.status(201)    
      res.send({"user" : user})
  } catch (error) {
      res.status(400)
      res.send({"error" : "Failed to create user: " + error })
  }
})



// saeed //////////////////////////////////////////////////////////////////
// app.patch('/users/:1', async(req, res) => {
//   const User = new Parse.User();
//   const query = new Parse.Query(User);
//   // let id = req.params.id;
//   try{
//     let user = await query.get('hEPjkt4epS')
//     user.set('username', username);
//     user.set('email', email);
//     user.set('password', password)
//     // let response = await user.save();
//     // console.log(response)
//   try {
//     // Saves the user with the updated data
//     let response = await user.save();
//     console.log('Updated user', response);
//   } catch (error) {
//     console.error('Error while updating user', error);
//   }
// } catch (error) {
//   console.error('Error while retrieving user', error);
// }
// })

// post 
// https://parseplatform.org/parse-server/api/5.2.0/#nodejs
app.post('/classes/Mentor', async (req, res) => {
  let {name , gender, age} = req.body;
 console.log({
  name,
  gender,
  age
 })
 var Mentor = Parse.Object.extend("Mentor");
 const myNewObject = new Mentor();
 myNewObject.set('name', name);
 myNewObject.set('gender', gender);
 myNewObject.set('age', age);
 try {
   const result = await myNewObject.save();
   console.log(result)
   res.send('submitted')
   // Access the Parse Object attributes using the .GET method
  //  console.log('Mentor created', result);
 } catch (error) {
   console.error('Error while creating Mentor: ', error);
 }
})

app.post('/user', async (req, res) => {
  let {name , gender, age} = req.body;
 console.log({
  name,
  gender,
  age
 })
 var Mentor = Parse.Object.extend("Mentor");
 const myNewObject = new Mentor();
 myNewObject.set('name', name);
 myNewObject.set('gender', gender);
 myNewObject.set('age', age);
 try {
   const result = await myNewObject.save();
   console.log(result)
   res.send('submitted')
   // Access the Parse Object attributes using the .GET method
  //  console.log('Mentor created', result);
 } catch (error) {
   console.error('Error while creating Mentor: ', error);
 }
})

// app.patch('/update/Mentor/:id', async(req, res) =>{
//   let {name, gender, age} = req.body;
//   var Mentor = Parse.Object.extend("Mentor");
//   // var Mentor =new Parse.Mentor();
//   const my = new Mentor();
//  my.set("name" , name);
//  my.set("gender", gender);
//  my.set("age", age)
//  try{
//   const result = await my.save();
//   res.send('updated')
//   console.log('okay')
//  }catch(err){
//   console.log(err)
//  }
// })


// users update api
app.patch('/update/users/:id', async(req, res) =>{
  let { username, email, country, language, description, skill, category,  password } = req.body;
  var Mentor = Parse.Object.extend("User");
  // var Mentor =new Parse.Mentor();
  const my = new Mentor();
 my.set("username" , username);
 my.set("email", email);
 my.set("country", country);
 my.set("language", language);
 my.set("description", description);
 my.set("skill", skill);
 my.set("category", category);
 my.set("password", password);
 try{
  const result = await my.save();
  res.send('updated')
  console.log('okay')
 }catch(err){
  console.log(err)
 }
})

// get
app.get('/classes/Mentor/:id', async (req, res) => {
const query = new Parse.Query("Mentor");
    try {
    const player = await query.findById();
 
    res.send('submitted')
    
    } catch (error) {
      res.send('error')
    }
})



// get req
app.post('/updateUser', async (req, res) => {
let { username, email, country, language, description, skill, category, password } = req.body;
var Mantee = Parse.Object.extend();
  const user = new Mantee();
  user.set('username', username);
  user.set('email',  email);
  user.set('country', country);
  user.set('language', language);
  user.set('description', description);
  user.set('skill', skill);
  user.set('category', category);
  user.set('password', password);

  try {
    let userResult = await user.signUp();
    console.log('User signed up', userResult);
  } catch (error) {
    console.error('Error while signing up user', error);
  }
})



app.get('/updateUser', async (req, res) => {
  const query = new Parse.Query("User");
  try {
  const player = await query.find();
  console.log(player[0])
  // alert(`Name: ${name}, gender: ${gender}, age: ${age}`);
  } catch (error) {
  alert(`Failed to retrieve the object, with error code: ${error.message}`);
  }
  })



// saeed //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.post('/login', async (req, res) => {
  try {
    const user = await Parse.User.logIn(req.body.username, req.body.password)
    res.send({"user" : user})
  } catch (error) {
    res.status(400)
    res.send({"error" : "Login failed: " + error })
  }
})
// Set up Linkedin OAuth here 
var router = express.Router();
const request = require('superagent');
const { User } = require('parse/node')

router.get('/profile', function(req, res, next){
  requestAccessToken(req.body.code, req.query.state)

  .then(response => {
    requestProfile(response.body.access_token)
    .then(response =>{
      console.log('response: ', response.body);

      res.render('profile', {profile: response.body})
    } );
  })
  .catch((error) => {
    res.status(500).send(`${error}`)
  })
})

function requestAccessToken(code, state){
  return request.post('https://www.linkedin.com/oauth/v2/accessToken')
    .send('grant_type=authorization_code')
    .send('redirect_uri= http://localhost:3000/profile')
    .send('client_id=86bj0k3tnixpok')
    .send('client_secret=9XSEs7KoTrAeu78b')
    .send(`code=${code}`)
    .send(`state=${state}`)
}

function requestProfile(token) {
  return request.get('https://api.linkedin.com/v2/me?projection=(id,localizedFirstName,localizedLastName,profilePicture(displayImage~digitalmediaAsset:playableStreams))')
  .set('Authorization', `Bearer ${token}`)
}
module.exports = app;
